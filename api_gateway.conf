include api_backends.conf;

server {
    listen 443 ssl;
    server_name gw.verifire.com;

    # TLS config
    ssl_certificate      /etc/nginx/certs/gw.verifire.com.crt;
    ssl_certificate_key  /etc/nginx/certs/gw.verifire.com.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.2 TLSv1.3;

    add_header 'Access-Control-Allow-Origin' '*' always;

    # API definitions, one per file
    include api_conf.d/*.conf;

    # Error responses
    # error_page 404 = @400;         # Invalid paths are treated as bad requests
    # proxy_intercept_errors on;     # Do not send backend errors to the client
    include api_json_errors.conf;  # API client friendly JSON error responses
    default_type application/json; # If no content-type then assume JSON

    # X-API-KEY validation
    location = /_validate_xapikey {
        internal;

        proxy_pass http://project_service/v1/token/validate;
        proxy_set_header X-API-KEY $http_x_api_key;
        proxy_intercept_errors on;
    }

    # OAuth2 token validation
    location = /_validate_token {
        internal;

        proxy_pass http://auth_service/v1/token/validate;
        proxy_set_header Authorization $http_authorization;
        proxy_intercept_errors on;
    }

    # X-RECAPTCHA-V3-TOKEN & X-RECAPTCHA-V2-TOKEN validation
    location = /_validate_recaptcha {
        internal;

        proxy_pass http://recaptcha_service/v1/validate;
        proxy_set_header X-Recaptcha-V2-Token $http_x_recaptcha_v2_token;
        proxy_set_header X-Recaptcha-V3-Token $http_x_recaptcha_v3_token;
        proxy_intercept_errors on;
    }

    # X-RECAPTCHA-V3-TOKEN validation
    location = /_validate_recaptcha_v3 {
        internal;

        proxy_pass http://recaptcha_service/v1/validate/v3;
        proxy_set_header X-Recaptcha-V3-Token $http_x_recaptcha_v3_token;
        proxy_intercept_errors on;
    }

    # X-RECAPTCHA-V2-TOKEN validation
    location = /_validate_recaptcha_v2 {
        internal;

        proxy_pass http://recaptcha_service/v1/validate/v2;
        proxy_set_header X-Recaptcha-V2-Token $http_x_recaptcha_v2_token;
        proxy_intercept_errors on;
    }
}